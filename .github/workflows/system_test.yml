name: 'system test'

on:
  pull_request:
    branches: [ main ]

jobs:
  fetch-branch:
    name: 'Fetch branch name'
    runs-on: ubuntu-latest  

    steps:
    - id: identify
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/})"

    outputs:
      branch: ${{ steps.identify.outputs.branch }}

  skip_duplicate:
    name: 'Check whether to skip job'
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          paths: '["src/adiar/**"]'

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

  run-benchmark:
    name: 'System Test: ${{ matrix.name }}'
    runs-on: ubuntu-latest

    needs: [fetch-branch, skip_duplicate]
    if: ${{ needs.skip_duplicate.outputs.should_skip != 'true' }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Queens'
            exec: adiar_queens
            N: '8 9 10 11 12 13 14'

          - name: 'Queens (ZDD)'
            exec: adiar_queens_zdd
            N: '8 9 10 11 12 13 14'

          - name: 'SAT: Pigeonhole Princiople'
            exec: adiar_sat_pigeonhole_principle
            N: '1 2 3 4 5 6 7 8 9 10'

          - name: 'SAT: Queens'
            exec: adiar_sat_queens
            N: '5 6 7 8'

          - name: 'Tic-Tac-Toe'
            exec: adiar_tic_tac_toe
            N: '18 19 20 21 22'

    steps:
    - name: Git | checkout SSoelvsten/BDD-Benchmark
      uses: actions/checkout@v2
      with:
        repository: 'ssoelvsten/bdd-benchmark'
        submodules: 'recursive'
        fetch-depth: '0'
    - name: Git | checkout pull request
      run: |
        cd external/adiar
        git remote set-url origin https://github.com/${{ github.event.pull_request.head.repo.full_name }}.git
        git fetch
        git checkout ${{ needs.fetch-branch.outputs.branch }}
        git submodule update --init --recursive
        git status

    - name: Apt | install boost
      run: |
        sudo apt update
        sudo apt install libboost-all-dev

    - name: CMake | build
      run: |
        cmake -E make_directory build
        cd build
        cmake ../ -D CMAKE_BUILD_TYPE=Release && cmake --build . --target ${{ matrix.exec }}

    - name: Run Benchmark
      run: for n in ${{ matrix.N }}; do build/src/${{ matrix.exec }} -N $n -M 1024; done

  run-dummy:
    name: 'System Test: ${{ matrix.name }}'
    runs-on: ubuntu-latest

    needs: [fetch-branch, skip_duplicate]
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'true' }}

    strategy:
      matrix:
        include:
          - name: 'Queens'
          - name: 'Queens (ZDD)'
          - name: 'SAT: Pigeonhole Princiople'
          - name: 'SAT: Queens'
          - name: 'Tic-Tac-Toe'

    steps:
    - name: Echo skip
      run: |
        echo "Running benchmark is skipped"
