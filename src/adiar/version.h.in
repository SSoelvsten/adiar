#ifndef ADIAR_VERSION_H
#define ADIAR_VERSION_H

#include <string_view>

namespace adiar
{
  //////////////////////////////////////////////////////////////////////////////
  /// \addtogroup module__adiar
  ///
  /// \{

  //////////////////////////////////////////////////////////////////////////////
  /// \name Version Number
  ///
  /// \{

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Major version of Adiar.
  //////////////////////////////////////////////////////////////////////////////
  constexpr unsigned short version_major = @ADIAR_VERSION_MAJOR@;

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Minor version of Adiar.
  //////////////////////////////////////////////////////////////////////////////
  constexpr unsigned short version_minor = @ADIAR_VERSION_MINOR@;

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Patch version of Adiar.
  //////////////////////////////////////////////////////////////////////////////
  constexpr unsigned short version_patch = @ADIAR_VERSION_PATCH@;

  //////////////////////////////////////////////////////////////////////////////
  /// \brief   Combined version number of Adiar into a single integer.
  ///
  /// \details The each part of the version number is encoded as two decimal
  ///          digits. That is, it is *MMmmpp* where *M* is the *Major*, *m* is
  ///          the *minor*, and *p* is the *patch* version. This can be used to
  ///          ensure at compile-time whether Adiar's version is within a
  ///          desired range.
  //////////////////////////////////////////////////////////////////////////////
  constexpr unsigned short version = (version_major * 10'000) + (version_minor*100) + version_patch;

  //////////////////////////////////////////////////////////////////////////////
  /// \brief A pre-formatted string for version of the Adiar version.
  //////////////////////////////////////////////////////////////////////////////
  constexpr std::string_view version_string = "@ADIAR_VERSION_MAJOR@.@ADIAR_VERSION_MINOR@.@ADIAR_VERSION_PATCH@";

  /// \}
  //////////////////////////////////////////////////////////////////////////////

  /// \}
  //////////////////////////////////////////////////////////////////////////////
}

#endif // ADIAR_VERSION_H
