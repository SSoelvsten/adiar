#ifndef ADIAR_H
#define ADIAR_H

#include <string>

////////////////////////////////////////////////////////////////////////////////
/// Core
#include <adiar/data.h>
#include <adiar/file.h>
#include <adiar/file_stream.h>
#include <adiar/file_writer.h>

////////////////////////////////////////////////////////////////////////////////
/// Decision Diagrams
#include <adiar/bdd.h>
#include <adiar/zdd.h>

////////////////////////////////////////////////////////////////////////////////
/// Statistics
#include <adiar/statistics.h>

////////////////////////////////////////////////////////////////////////////////
/// Deprecated Functions
#include <adiar/deprecated.h>

namespace adiar
{
  //////////////////////////////////////////////////////////////////////////////
  /// \brief Initiates Adiar with the given amount of memory (given in bytes)
  ///
  /// \param memory_limit_bytes
  /// The number of bytes to allocate for Adiar to use as internal memory. This
  /// has to be at least 128 MiB.
  ///
  /// \param temp_dir
  /// The directory to use for all temporary external memory files. By default
  /// on Unix, this is the '/tmp' folder.
  //////////////////////////////////////////////////////////////////////////////
  void adiar_init(size_t memory_limit_bytes, std::string temp_dir = "");

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Whether Adiar is initialized.
  //////////////////////////////////////////////////////////////////////////////
  bool adiar_initialized();

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Closes and cleans up everything by Adiar
  //////////////////////////////////////////////////////////////////////////////
  void adiar_deinit();
}

#endif // ADIAR_H
