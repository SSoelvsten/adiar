////////////////////////////////////////////////////////////////////////////////
///   This Source Code Form is subject to the terms of the Mozilla Public    ///
///   License, v. 2.0. If a copy of the MPL was not distributed with this    ///
///   file, You can obtain one at http://mozilla.org/MPL/2.0/.               ///
////////////////////////////////////////////////////////////////////////////////

#ifndef ADIAR_ZDD_PRED_H
#define ADIAR_ZDD_PRED_H

#include <adiar/zdd/zdd.h>

namespace adiar
{
  //////////////////////////////////////////////////////////////////////////////
  /// \brief Determines whether the two given ZDDs represent the same family.
  //////////////////////////////////////////////////////////////////////////////
  bool zdd_equal(const zdd &s1, const zdd &s2);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Determines whether the two given ZDDs represent different families.
  //////////////////////////////////////////////////////////////////////////////
  bool zdd_unequal(const zdd &s1, const zdd &s2);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Determines whether one family is a subset or equal to the other.
  //////////////////////////////////////////////////////////////////////////////
  bool zdd_subseteq(const zdd &s1, const zdd &s2);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Determines whether one family is a subset of the other.
  //////////////////////////////////////////////////////////////////////////////
  bool zdd_subset(const zdd &s1, const zdd &s2);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Determines whether the two families are disjoint.
  //////////////////////////////////////////////////////////////////////////////
  bool zdd_disjoint(const zdd &s1, const zdd &s2);
}

#endif // ADIAR_ZDD_PRED_H
