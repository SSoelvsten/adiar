#ifndef ADIAR_INTERNAL_BLOCK_SIZE_H
#define ADIAR_INTERNAL_BLOCK_SIZE_H

#include <tpie/tpie.h>

namespace adiar::internal
{
  // TODO: Make part of the public API?

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Minimum block size of 2 MiB.
  //////////////////////////////////////////////////////////////////////////////
  constexpr size_t MINIMUM_BLOCK_SIZE = 2 * 1024 * 1024;

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Sets the block size for TPIE.
  //////////////////////////////////////////////////////////////////////////////
  inline void set_block_size(size_t block_size_bytes)
  {
    tpie::set_block_size(block_size_bytes);
  }

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Get the block size from TPIE.
  //////////////////////////////////////////////////////////////////////////////
  inline size_t get_block_size()
  {
    return tpie::get_block_size();
  }

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Computes a recommended block size to be used with a specific
  ///        amount of available internal memory.
  //////////////////////////////////////////////////////////////////////////////
  inline size_t recommended_block_size(size_t /*memory_limit_bytes*/)
  {
    return MINIMUM_BLOCK_SIZE;
  }
}

#endif // ADIAR_INTERNAL_BLOCK_SIZE_H