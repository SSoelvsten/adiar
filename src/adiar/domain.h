#ifndef ADIAR_DOMAIN_H
#define ADIAR_DOMAIN_H

////////////////////////////////////////////////////////////////////////////////
/// \defgroup module__domain Variable Domain
///
/// \brief Global domain of variables.
///
/// Some operations relate to the entire variable domain. Instead of passing
/// this around explicitly, you may set it once and then Adiar will take care of
/// using it when needed.
////////////////////////////////////////////////////////////////////////////////

#include <adiar/file.h>
#include <adiar/internal/data_types/node.h> // <-- remove after TODO below.

namespace adiar
{
  //////////////////////////////////////////////////////////////////////////////
  /// \addtogroup module__domain
  ///
  /// \{

  // TODO: make the labels of the domain a supertype of all labels (size_t?).

  //////////////////////////////////////////////////////////////////////////////
  /// \brief     Set the domain globally for all of Adiar.
  ///
  /// \param dom A \ref shared_file containing all labels of the problem domain
  ///            in ascending order.
  //////////////////////////////////////////////////////////////////////////////
  void adiar_set_domain(const shared_file<internal::node::label_t> &dom);

  //////////////////////////////////////////////////////////////////////////////
  /// \brief     Removes any globally shared domain variable (if any).
  ///
  /// \sa adiar_set_domain
  //////////////////////////////////////////////////////////////////////////////
  void adiar_unset_domain();

  //////////////////////////////////////////////////////////////////////////////
  /// \brief Whether Adiar has a global domain.
  //////////////////////////////////////////////////////////////////////////////
  bool adiar_has_domain();

  //////////////////////////////////////////////////////////////////////////////
  /// \brief  Returns the global domain if `adiar_has_domain() == true`.
  ///
  /// \throws std::domain_error If no domain is yet set, i.e.
  ///         `adiar_has_domain() == false`.
  //////////////////////////////////////////////////////////////////////////////
  shared_file<internal::node::label_t> adiar_get_domain();

  /// \}
  //////////////////////////////////////////////////////////////////////////////
}

#endif // ADIAR_DOMAIN_H
